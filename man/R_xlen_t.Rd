% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R_xlen_t.R
\docType{data}
\name{R_xlen_t}
\alias{R_xlen_t}
\alias{R_len_t}
\alias{R_LEN_T_MAX}
\alias{R_XLEN_T_MAX}
\title{Type Definition: 'R_xlen_t' and 'R_len_t'}
\format{
An object of class \code{typedef} of length 1.
}
\source{
Declaration: \href{https://github.com/wch/r-source/blob/trunk/src/include/Rinternals.h}{src/include/Rinternals.h}
}
\usage{
#include <Rinternals.h>
R_xlen_t
R_len_t
}
\description{
Type Definition: 'R_xlen_t' and 'R_len_t'
}
\section{C API}{

Long vectors:

\if{html}{\out{<div class="sourceCode c">}}\preformatted{typedef ptrdiff_t R_xlen_t;
define R_XLEN_T_MAX 4503599627370496
}\if{html}{\out{</div>}}

Short vectors:

\if{html}{\out{<div class="sourceCode c">}}\preformatted{typedef int R_len_t;
#define R_LEN_T_MAX INT_MAX
}\if{html}{\out{</div>}}

If long vectors are \emph{not} supported on the current platform, then:

\if{html}{\out{<div class="sourceCode c">}}\preformatted{LONG_VECTOR_SUPPORT
}\if{html}{\out{</div>}}

is \emph{not} defined and we have:

\if{html}{\out{<div class="sourceCode">}}\preformatted{typedef int R_xlen_t;
define R_XLEN_T_MAX R_LEN_T_MAX
}\if{html}{\out{</div>}}
}

\section{R API}{


\if{html}{\out{<div class="sourceCode r">}}\preformatted{library(base)

# Maximum length of a "short" vector ...
x <- seq_len(.Machine$integer.max)
xlen <- length(x) # integer; internally R_len_t

# ... before becoming a "long" vector
x <- seq_len(.Machine$integer.max + 1)
xlen <- length(x) # numeric; internally R_xlen_t
}\if{html}{\out{</div>}}
}

\keyword{datasets}
